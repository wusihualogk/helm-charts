apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fastdfs-nginx.fullname" . }}-storage
  labels:
    app: {{ template "fastdfs-nginx.name" . }}
    chart: {{ template "fastdfs-nginx.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount.storage }}
  selector:
    matchLabels:
      app: {{ template "fastdfs-nginx.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fastdfs-nginx.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          args:
            - storage
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: storage
              containerPort: 22122
              protocol: TCP
            - name: storage-nginx
              containerPort: 80
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: storage-nginx
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: storage-nginx
          resources:
{{ toYaml .Values.resources.storage | indent 12 }}
          volumeMounts:
          - name: data
            mountPath: /var/fdfs
      volumes:
      - name: data
      {{- if .Values.persistentVolume.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistentVolume.existingClaim.storage | default (printf "%s-storage" (include "fastdfs-nginx.fullname" .)) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end -}}
