apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "registry.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.registry.podLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.registry.podLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.registry.service.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.registry.service.annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ include "common.labels.matchLabels" . | nindent 6 }}
  serviceName: {{ include "registry.fullname" . }}
  template:
    metadata:
      annotations:
        {{- if .Values.registry.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.registry.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.registry.podLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.registry.podLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "registry.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.registry.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.registry.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName | quote }}
      {{- end }}
      {{- if .Values.registry.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.registry.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.registry.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.registry.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.registry.initContainers }}
      initContainers:
        {{- if .Values.registry.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.registry.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: registry
          image: {{ include "registry.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.registry.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.registry.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.registry.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.registry.args "context" $) | nindent 12 }}
          {{- end }}
          ports:
            - name: registry
              containerPort: {{ .Values.registry.service.targetPort }}
          {{- if .Values.registry.resources }}
          resources: {{ toYaml .Values.registry.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
            - name: data
              mountPath: /var/lib/registry
            {{- if .Values.registry.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.registry.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
        {{- if .Values.registry.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.registry.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
  {{- if and .Values.registry.persistence.enabled .Values.registry.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ tpl .Values.registry.persistence.existingClaim . }}
  {{- else if not .Values.registry.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if and .Values.registry.persistence.enabled (not .Values.registry.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: {{ include "common.labels.matchLabels" . | nindent 10 }}
      {{- if .Values.registry.persistence.annotations }}
        annotations:
          {{- toYaml .Values.registry.persistence.annotations | nindent 10 }}
      {{- end }}
      spec:
        accessModes:
          {{- range .Values.registry.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.registry.persistence.size | quote }}
        {{ include "common.storage.class" (dict "persistence" .Values.registry.persistence "global" .Values.global) }}
        {{- if .Values.registry.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.registry.persistence.selector "context" $) | nindent 10 }}
        {{- end -}}
  {{- end }}
